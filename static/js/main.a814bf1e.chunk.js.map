{"version":3,"sources":["components/Section/Section.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/MainContainer/MainContainer.module.scss","components/PageHeader/PageHeader.module.scss","components/ContactList/ContactListElement/ContactListElement.module.scss","components/Filter/Filter.module.scss","components/MainContainer/MainContainer.js","components/PageHeader/PageHeader.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListElement/ContactListElement.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","MainContainer","children","className","styles","defaultProps","PageHeader","title","Section","Section__Title","ContactForm","whenSubmit","useState","name","number","contact","setContact","handleChange","event","currentTarget","value","prevContact","formReset","onSubmit","preventDefault","type","pattern","required","onChange","ContactForm__Button","ContactListElement","whenDelete","ContactListElement__Button","onClick","ContactList","contacts","filter","filteredContacts","toLowerCase","includes","map","id","ContactList__Item","Filter","filterValue","whenChange","App","setContacts","setFilter","isFirstRender","useRef","useEffect","contactsData","JSON","parse","localStorage","getItem","current","setItem","stringify","some","alert","prevContacts","uuidv4","target","idToDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a814bf1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__3QDCh\",\"Section__Title\":\"Section_Section__Title__1AblL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__mhliC\",\"ContactForm__Button\":\"ContactForm_ContactForm__Button__3TuNf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3xchQ\",\"ContactList__Item\":\"ContactList_ContactList__Item__VBzbo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"MainContainer_MainContainer__2T55w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageHeader\":\"PageHeader_PageHeader__2IC5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListElement__Button\":\"ContactListElement_ContactListElement__Button__2wtjR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__pJyR3\"};","import PropTypes from 'prop-types';\nimport styles from './MainContainer.module.scss';\n\nconst MainContainer = ({ children }) => {\n  return <div className={styles.MainContainer}>{children}</div>;\n};\n\nMainContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nMainContainer.defaultProps = {\n  children: <></>,\n};\n\nexport default MainContainer;\n","import PropTypes from 'prop-types';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title }) => {\n  return <div className={styles.PageHeader}>{title}</div>;\n};\n\nPageHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nPageHeader.defaultProps = {\n  title: 'Where is your title?',\n};\n\nexport default PageHeader;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.scss';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.Section}>\n      <h2 className={styles.Section__Title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nSection.defaultProps = {\n  title: 'Where is your title?',\n  children: <></>,\n};\n\nexport default Section;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\n\nconst ContactForm = ({ whenSubmit }) => {\n  const [contact, setContact] = useState({ name: '', number: '' });\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setContact(prevContact => ({ ...prevContact, [name]: value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    whenSubmit(contact);\n    formReset();\n  };\n\n  const formReset = () => {\n    setContact({ name: '', number: '' });\n  };\n\n  return (\n    <form className={styles.ContactForm} onSubmit={handleSubmit}>\n      <label>\n        {`Name: `}\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={contact.name}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <label>\n        {`Number: `}\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={contact.number}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <button className={styles.ContactForm__Button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  whenSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport styles from './ContactListElement.module.scss';\n\nconst ContactListElement = ({ name, number, whenDelete }) => {\n  return (\n    <>\n      {name}: {number}\n      <button\n        className={styles.ContactListElement__Button}\n        type=\"button\"\n        onClick={whenDelete}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactListElement.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  whenDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListElement;\n","import PropTypes from 'prop-types';\nimport ContactListElement from './ContactListElement';\nimport styles from './ContactList.module.scss';\n\nconst ContactList = ({ contacts, filter, whenDelete }) => {\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return (\n    <ul className={styles.ContactList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li className={styles.ContactList__Item} key={id}>\n          <ContactListElement\n            name={name}\n            number={number}\n            whenDelete={() => whenDelete(id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  filter: PropTypes.string.isRequired,\n  whenDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styles from './Filter.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filterValue, whenChange }) => {\n  return (\n    <label>\n      {`Find by Name: `}\n      <input\n        className={styles.Filter}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={filterValue}\n        onChange={whenChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filterValue: PropTypes.string.isRequired,\n  whenChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect, useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport MainContainer from './components/MainContainer';\nimport PageHeader from './components/PageHeader';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\n// import initialContacts from './utils/contacts.json';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  // const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    const contactsData = JSON.parse(localStorage.getItem('contacts'));\n    if (contactsData) setContacts(contactsData);\n  }, []);\n\n  useEffect(() => {\n    if (isFirstRender.current === true) {\n      isFirstRender.current = false;\n      return;\n    }\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n\n  const whenSubmit = ({ name, number }) => {\n    if (contacts.some(contact => contact.name === name))\n      return alert(`${name} is already in contacts`);\n\n    setContacts(prevContacts => [\n      ...prevContacts,\n      { id: uuidv4(), name, number },\n    ]);\n  };\n\n  const whenDelete = idToDelete => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== idToDelete),\n    );\n  };\n\n  return (\n    <MainContainer>\n      <PageHeader title=\"React Homework 04. Phonebook\" />\n\n      <Section title=\"Add Contact\">\n        <ContactForm whenSubmit={whenSubmit} />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter filterValue={filter} whenChange={handleFilter} />\n        <br />\n        <ContactList\n          contacts={contacts}\n          filter={filter}\n          whenDelete={whenDelete}\n        />\n      </Section>\n    </MainContainer>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}