{"version":3,"sources":["components/Section/Section.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/MainContainer/MainContainer.module.scss","components/PageHeader/PageHeader.module.scss","components/ContactList/ContactListElement/ContactListElement.module.scss","components/Filter/Filter.module.scss","components/MainContainer/MainContainer.js","components/PageHeader/PageHeader.js","components/Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListElement/ContactListElement.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","MainContainer","children","className","styles","defaultProps","PageHeader","title","Section","Section__Title","addContact","createAction","removeContact","changeFilter","contactsFromLocalStorage","JSON","parse","localStorage","getItem","itemsReducer","createReducer","state","action","increasedContacts","id","uuidv4","name","payload","number","setItem","stringify","reducedContacts","filter","contact","filterReducer","_","combineReducers","items","store","configureStore","reducer","contacts","contactsReducer","devTools","process","ContactForm","useState","setContact","dispatch","useDispatch","handleChange","event","currentTarget","value","prevContact","formReset","onSubmit","preventDefault","getState","some","item","alert","type","pattern","required","onChange","ContactForm__Button","ContactListElement","whenDelete","ContactListElement__Button","onClick","ContactList","filteredContacts","useSelector","toLowerCase","includes","map","ContactList__Item","Filter","filterValue","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a1c396f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__3QDCh\",\"Section__Title\":\"Section_Section__Title__1AblL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__mhliC\",\"ContactForm__Button\":\"ContactForm_ContactForm__Button__3TuNf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3xchQ\",\"ContactList__Item\":\"ContactList_ContactList__Item__VBzbo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"MainContainer_MainContainer__2T55w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageHeader\":\"PageHeader_PageHeader__2IC5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListElement__Button\":\"ContactListElement_ContactListElement__Button__2wtjR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__pJyR3\"};","import PropTypes from 'prop-types';\nimport styles from './MainContainer.module.scss';\n\nconst MainContainer = ({ children }) => {\n  return <div className={styles.MainContainer}>{children}</div>;\n};\n\nMainContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nMainContainer.defaultProps = {\n  children: <></>,\n};\n\nexport default MainContainer;\n","import PropTypes from 'prop-types';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title }) => {\n  return <div className={styles.PageHeader}>{title}</div>;\n};\n\nPageHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nPageHeader.defaultProps = {\n  title: 'Where is your title?',\n};\n\nexport default PageHeader;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.scss';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.Section}>\n      <h2 className={styles.Section__Title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nSection.defaultProps = {\n  title: 'Where is your title?',\n  children: <></>,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('phonebook/addContact');\nexport const removeContact = createAction('phonebook/removeContact');\nexport const changeFilter = createAction('phonebook/changeFilter');","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\nimport { addContact, removeContact, changeFilter } from './contacts-actions';\n\nconst contactsFromLocalStorage = JSON.parse(localStorage.getItem('contacts'));\n\nconst itemsReducer = createReducer(\n  contactsFromLocalStorage ?? [],\n  {\n    [addContact]: (state, action) => {\n      const increasedContacts = [\n        ...state,\n        { id: uuidv4(), name: action.payload.name, number: action.payload.number },\n      ];\n      localStorage.setItem('contacts', JSON.stringify(increasedContacts));\n      return increasedContacts;\n    },\n\n    [removeContact]: (state, action) => {\n      const reducedContacts = state.filter(contact => contact.id !== action.payload);\n      localStorage.setItem('contacts', JSON.stringify(reducedContacts));\n      return reducedContacts;\n    },\n  },\n);\n\nconst filterReducer = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","// import { createStore, combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\nconst store = configureStore({\n  // reducer: rootReducer,\n  reducer: {\n    contacts: contactsReducer,\n  },\n  // devTools: true,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './ContactForm.module.scss';\nimport store from '../../redux/store';\nimport { addContact } from '../../redux/contacts/contacts-actions';\n\nconst ContactForm = () => {\n\n  const [contact, setContact] = useState({ name: '', number: '' });\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setContact(prevContact => ({ ...prevContact, [name]: value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      store.getState().contacts.items.some(item => item.name === contact.name)\n    )\n      return alert(`${contact.name} is already in contacts`);\n\n    dispatch(addContact(contact));\n\n    formReset();\n  };\n\n  const formReset = () => {\n    setContact({ name: '', number: '' });\n  };\n\n  return (\n    <form className={styles.ContactForm} onSubmit={handleSubmit}>\n      <label>\n        {`Name: `}\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={contact.name}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <label>\n        {`Number: `}\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={contact.number}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <button className={styles.ContactForm__Button} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport styles from './ContactListElement.module.scss';\n\nconst ContactListElement = ({ name, number, whenDelete }) => {\n  return (\n    <>\n      {name}: {number}\n      <button\n        className={styles.ContactListElement__Button}\n        type=\"button\"\n        onClick={whenDelete}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactListElement.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  whenDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListElement;\n","import { useSelector, useDispatch } from 'react-redux';\nimport ContactListElement from './ContactListElement';\nimport { removeContact } from '../../redux/contacts/contacts-actions';\nimport styles from './ContactList.module.scss';\n\nconst ContactList = () => {\n\n  const filteredContacts = useSelector(({ contacts: { items, filter } }) => \n    items.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n  );\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={styles.ContactList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li className={styles.ContactList__Item} key={id}>\n          <ContactListElement\n            name={name}\n            number={number}\n            whenDelete={() => dispatch(removeContact(id))}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport styles from './Filter.module.scss';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\n\nconst Filter = () => {\n\n  const filterValue = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      {`Find by Name: `}\n      <input\n        className={styles.Filter}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={filterValue}\n        onChange={(event) => dispatch(changeFilter(event.target.value))}\n      />\n    </label>\n  );\n\n};\n\nexport default Filter;\n","import MainContainer from './components/MainContainer';\nimport PageHeader from './components/PageHeader';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  return (\n    <MainContainer>\n      <PageHeader title=\"React Homework 06. Phonebook\" />\n\n      <Section title=\"Add Contact\">\n        <ContactForm />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n        <br />\n        <ContactList />\n      </Section>\n    </MainContainer>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}